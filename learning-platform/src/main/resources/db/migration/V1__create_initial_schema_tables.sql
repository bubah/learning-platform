CREATE SCHEMA IF NOT EXISTS LEARNING_PLATFORM;  -- Create a schema for the tables

CREATE TABLE IF NOT EXISTS LEARNING_PLATFORM.USERS (
    ID UUID PRIMARY KEY,               -- The ID field as UUID, not auto-generated by the DB
    USERNAME VARCHAR(255) NOT NULL UNIQUE,    -- Username, unique and not nullable
    EMAIL VARCHAR(255) NOT NULL UNIQUE,       -- Email, unique and not nullable
    ROLE VARCHAR(255) NOT NULL,               -- Role, stored as a string (Enum)
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- Creation timestamp, automatically set
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- Update timestamp, automatically set
    CONSTRAINT role_check CHECK (role IN ('ADMIN', 'INSTRUCTOR', 'LEARNER'))  -- Enum constraint for role
);

CREATE TABLE IF NOT EXISTS LEARNING_PLATFORM.COURSES (
    ID UUID PRIMARY KEY,                                      -- Column for course ID
    TITLE VARCHAR(100) NOT NULL,                                      -- Column for course title
    DESCRIPTION VARCHAR(500) NOT NULL,                                -- Column for course description
    USER_ID UUID,                                               -- Foreign key for instructor
    PRICE DOUBLE PRECISION,                                           -- Column for course price
    CATEGORY VARCHAR(255) NOT NULL,                                   -- Column for course category
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,          -- Timestamp for creation
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,          -- Timestamp for update
    CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES LEARNING_PLATFORM.USERS(ID)  -- Foreign key constraint
);

CREATE TABLE IF NOT EXISTS LEARNING_PLATFORM.LECTURES (
    ID UUID PRIMARY KEY,                                      -- UUID type for the lecture's primary key
    COURSE_ID UUID,                                           -- Foreign key for the related Course (ManyToOne)
    TITLE VARCHAR(255) NOT NULL,                              -- Title of the lecture
    video_url VARCHAR(255),                                   -- URL for the video associated with the lecture
    DESCRIPTION TEXT NOT NULL,                                -- Description of the lecture
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- Creation timestamp, auto-filled
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- Update timestamp, auto-filled
    CONSTRAINT FK_COURSE_ID FOREIGN KEY (COURSE_ID) REFERENCES LEARNING_PLATFORM.COURSES(ID) -- Foreign key constraint
);

CREATE TABLE IF NOT EXISTS LEARNING_PLATFORM.SECTIONS (
    ID UUID PRIMARY KEY,                                      -- Column for section ID
    LECTURE_ID UUID,                                                  -- Foreign key for lecture
    TITLE VARCHAR(255) NOT NULL,                                       -- Column for section title
    CONTENT TEXT NOT NULL,                                             -- Column for section content
    DESCRIPTION TEXT NOT NULL,                                         -- Column for section description
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,           -- Timestamp for creation
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,           -- Timestamp for update
    CONSTRAINT FK_LECTURE_ID FOREIGN KEY (LECTURE_ID) REFERENCES LEARNING_PLATFORM.LECTURES(ID)  -- Foreign key constraint to LECTURES
);
